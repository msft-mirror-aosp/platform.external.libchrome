From 8a11aa957345415e902d7a2cac2964e45ad27348 Mon Sep 17 00:00:00 2001
From: hscham <hscham@chromium.org>
Date: Wed, 2 Feb 2022 10:41:21 +0900
Subject: [PATCH] Add base::ReadBigEndian and base::BigEndianReader that take
 uint8_t*

Forward compatibility patch for uprev to r942723 (crrev.com/c/3184459).

Change-Id: Ie776fbd8bd3517a0fac84a4ea7a5ccb019253713
---
 base/big_endian.cc | 3 +++
 base/big_endian.h  | 6 ++++++
 2 files changed, 9 insertions(+)

diff --git a/base/big_endian.cc b/base/big_endian.cc
index ad6a1016ed..f077608e21 100644
--- a/base/big_endian.cc
+++ b/base/big_endian.cc
@@ -14,6 +14,9 @@ namespace base {
 BigEndianReader::BigEndianReader(const char* buf, size_t len)
     : ptr_(buf), end_(ptr_ + len) {}
 
+BigEndianReader::BigEndianReader(const uint8_t* buf, size_t len)
+    : ptr_(reinterpret_cast<const char*>(buf)), end_(ptr_ + len) {}
+
 bool BigEndianReader::Skip(size_t len) {
   if (len > remaining())
     return false;
diff --git a/base/big_endian.h b/base/big_endian.h
index 13a0b9ba4c..a9eaaac869 100644
--- a/base/big_endian.h
+++ b/base/big_endian.h
@@ -46,6 +46,11 @@ inline void WriteBigEndian(char buf[], T val) {
   }
 }
 
+template<typename T>
+inline void ReadBigEndian(const uint8_t buf[], T* out) {
+  ReadBigEndian(reinterpret_cast<const char*>(buf), out);
+}
+
 // Specializations to make clang happy about the (dead code) shifts above.
 template <>
 inline void ReadBigEndian<uint8_t>(const char buf[], uint8_t* out) {
@@ -72,6 +77,7 @@ inline void WriteBigEndian<int8_t>(char buf[], int8_t val) {
 class BASE_EXPORT BigEndianReader {
  public:
   BigEndianReader(const char* buf, size_t len);
+  BigEndianReader(const uint8_t* buf, size_t len);
 
   const char* ptr() const { return ptr_; }
   size_t remaining() const { return end_ - ptr_; }
-- 
2.35.0.rc2.247.g8bbb082509-goog

