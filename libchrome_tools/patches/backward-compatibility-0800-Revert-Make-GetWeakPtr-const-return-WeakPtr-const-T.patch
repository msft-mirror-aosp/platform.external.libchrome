From b7073a62b815cb3cf7670275cca47b7dcef87a10 Mon Sep 17 00:00:00 2001
From: Brett Brotherton <bbrotherton@google.com>
Date: Tue, 8 Nov 2022 13:45:07 -0700
Subject: [PATCH 1/2] Revert "Make GetWeakPtr() const return WeakPtr<const T>"

This reverts commit 0b560bf1ef017df71d5b9a0d2e6129bec0e029f4.
---
 base/memory/weak_ptr.h           | 14 +++-----------
 base/memory/weak_ptr_unittest.cc | 18 ------------------
 base/memory/weak_ptr_unittest.nc | 16 ----------------
 3 files changed, 3 insertions(+), 45 deletions(-)

diff --git a/base/memory/weak_ptr.h b/base/memory/weak_ptr.h
index 2ebb05db44..c71c49e903 100644
--- a/base/memory/weak_ptr.h
+++ b/base/memory/weak_ptr.h
@@ -296,7 +296,6 @@ class TRIVIAL_ABI WeakPtr : public internal::WeakPtrBase {
   template <typename U> friend class WeakPtr;
   friend class SupportsWeakPtr<T>;
   friend class WeakPtrFactory<T>;
-  friend class WeakPtrFactory<std::remove_const_t<T>>;
   template <typename U>
   friend SafeRef<U> internal::MakeSafeRefFromWeakPtrInternals(
       const internal::WeakReference& ref,
@@ -352,22 +351,15 @@ class WeakPtrFactory : public internal::WeakPtrFactoryBase {
 
   ~WeakPtrFactory() = default;
 
-  WeakPtr<const T> GetWeakPtr() const {
-    return WeakPtr<const T>(weak_reference_owner_.GetRef(),
-                            reinterpret_cast<const T*>(ptr_));
-  }
+  // TODO(crbug.com/1366168): Replace all uses of this with GetMutableWeakPtr()
+  // in the codebase and make this return WeakPtr<const T>.
+  WeakPtr<T> GetWeakPtr() const { return GetMutableWeakPtr(); }
 
-  template <int&... ExplicitArgumentBarrier,
-            typename U = T,
-            typename = std::enable_if_t<!std::is_const_v<U>>>
   WeakPtr<T> GetWeakPtr() {
     return WeakPtr<T>(weak_reference_owner_.GetRef(),
                       reinterpret_cast<T*>(ptr_));
   }
 
-  template <int&... ExplicitArgumentBarrier,
-            typename U = T,
-            typename = std::enable_if_t<!std::is_const_v<U>>>
   WeakPtr<T> GetMutableWeakPtr() const {
     return WeakPtr<T>(weak_reference_owner_.GetRef(),
                       reinterpret_cast<T*>(ptr_));
diff --git a/base/memory/weak_ptr_unittest.cc b/base/memory/weak_ptr_unittest.cc
index 5a6c8735b7..e4f3baf0d2 100644
--- a/base/memory/weak_ptr_unittest.cc
+++ b/base/memory/weak_ptr_unittest.cc
@@ -707,24 +707,6 @@ TEST(WeakPtrTest, ConstUpCast) {
       !std::is_constructible_v<WeakPtr<Target>, WeakPtr<const Target>>);
 }
 
-TEST(WeakPtrTest, ConstGetWeakPtr) {
-  struct TestTarget {
-    const char* Method() const { return "const method"; }
-    const char* Method() { return "non-const method"; }
-
-    WeakPtrFactory<TestTarget> weak_ptr_factory{this};
-  } non_const_test_target;
-
-  const TestTarget& const_test_target = non_const_test_target;
-
-  EXPECT_EQ(const_test_target.weak_ptr_factory.GetWeakPtr()->Method(),
-            "const method");
-  EXPECT_EQ(non_const_test_target.weak_ptr_factory.GetWeakPtr()->Method(),
-            "non-const method");
-  EXPECT_EQ(const_test_target.weak_ptr_factory.GetMutableWeakPtr()->Method(),
-            "non-const method");
-}
-
 TEST(WeakPtrTest, GetMutableWeakPtr) {
   struct TestStruct {
     int member = 0;
diff --git a/base/memory/weak_ptr_unittest.nc b/base/memory/weak_ptr_unittest.nc
index 6bd21daf59..2cdd7b749f 100644
--- a/base/memory/weak_ptr_unittest.nc
+++ b/base/memory/weak_ptr_unittest.nc
@@ -136,22 +136,6 @@ void WontCompile() {
   WeakPtr<MultiplyDerivedProducer> ptr = AsWeakPtr(&f);
 }
 
-#elif defined(NCTEST_GETMUTABLEWEAKPTR_CONST_T)  // [r"fatal error: no matching member function for call to 'GetMutableWeakPtr'"]
-
-void WontCompile() {
-  Unrelated unrelated;
-  const WeakPtrFactory<const Unrelated> factory(&unrelated);
-  factory.GetMutableWeakPtr();
-}
-
-#elif defined(NCTEST_GETMUTABLEWEAKPTR_NOT_T)  // [r"fatal error: no matching member function for call to 'GetMutableWeakPtr'"]
-
-void WontCompile() {
-  DerivedUnrelated derived_unrelated;
-  const WeakPtrFactory<DerivedUnrelated> factory(&derived_unrelated);
-  factory.GetMutableWeakPtr<Unrelated>();
-}
-
 #endif
 
 }
-- 
2.38.1.431.g37b22c650d-goog

