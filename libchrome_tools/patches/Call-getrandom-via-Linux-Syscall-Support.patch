From dc8a73e37d7b02eae3d316326c6d82d6fef53a6e Mon Sep 17 00:00:00 2001
From: Grace Cham <hscham@chromium.org>
Date: Tue, 14 Jun 2022 21:04:01 +0900
Subject: [PATCH] Call `getrandom` via Linux Syscall Support

Rather than through the libc wrapper since we might not have an
up-to-date libc on some bots.
---
 base/rand_util_posix.cc | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/base/rand_util_posix.cc b/base/rand_util_posix.cc
index b58c374062..9382199511 100644
--- a/base/rand_util_posix.cc
+++ b/base/rand_util_posix.cc
@@ -18,7 +18,9 @@
 #include "build/build_config.h"
 
 #if (BUILDFLAG(IS_LINUX) || BUILDFLAG(IS_CHROMEOS)) && !BUILDFLAG(IS_NACL)
-#include "third_party/lss/linux_syscall_support.h"
+// TODO(b/190018559): linux_syscall_support.h is not provided at current libchrome tree.
+// #include "third_party/lss/linux_syscall_support.h"
+#include <sys/random.h>
 #elif BUILDFLAG(IS_MAC)
 // TODO(crbug.com/995996): Waiting for this header to appear in the iOS SDK.
 // (See below.)
@@ -63,10 +65,14 @@ namespace base {
 // it or some form of it.
 void RandBytes(void* output, size_t output_length) {
 #if (BUILDFLAG(IS_LINUX) || BUILDFLAG(IS_CHROMEOS)) && !BUILDFLAG(IS_NACL)
+#if 0
   // We have to call `getrandom` via Linux Syscall Support, rather than through
   // the libc wrapper, because we might not have an up-to-date libc (e.g. on
   // some bots).
   const ssize_t r = HANDLE_EINTR(sys_getrandom(output, output_length, 0));
+#else
+  const ssize_t r = HANDLE_EINTR(getrandom(output, output_length, 0));
+#endif
 
   // Return success only on total success. In case errno == ENOSYS (or any other
   // error), we'll fall through to reading from urandom below.
-- 
2.36.1.476.g0c4daa206d-goog

