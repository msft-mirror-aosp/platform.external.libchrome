From 50ca35630dfd00347e82e9acc5ccaf6cdf67eb7e Mon Sep 17 00:00:00 2001
From: Kevin Lin <kevinptt@chromium.org>
Date: Thu, 22 Aug 2024 15:39:36 +0800
Subject: [PATCH] Revert "Remove "int WriteFile""

This reverts commit 8e52932325b70125f50dce90e96fc4282fcbbfb5.
---
 base/files/file_util.cc       |  9 ++++++++-
 base/files/file_util.h        |  9 +++++++++
 base/files/file_util_posix.cc | 16 +++++++++++-----
 3 files changed, 28 insertions(+), 6 deletions(-)

diff --git a/base/files/file_util.cc b/base/files/file_util.cc
index 6211201ecb..7b0347ccc8 100644
--- a/base/files/file_util.cc
+++ b/base/files/file_util.cc
@@ -493,8 +493,15 @@ int ReadFile(const FilePath& filename, char* data, int max_size) {
   return checked_cast<int>(result.value());
 }
 
+bool WriteFile(const FilePath& filename, span<const uint8_t> data) {
+  int size = checked_cast<int>(data.size());
+  return WriteFile(filename, reinterpret_cast<const char*>(data.data()),
+                   size) == size;
+}
+
 bool WriteFile(const FilePath& filename, std::string_view data) {
-  return WriteFile(filename, as_byte_span(data));
+  int size = checked_cast<int>(data.size());
+  return WriteFile(filename, data.data(), size) == size;
 }
 
 FilePath GetUniquePath(const FilePath& path) {
diff --git a/base/files/file_util.h b/base/files/file_util.h
index 7c12d6d239..e41d82ad4f 100644
--- a/base/files/file_util.h
+++ b/base/files/file_util.h
@@ -565,6 +565,15 @@ BASE_EXPORT std::optional<uint64_t> ReadFile(const FilePath& filename,
 // TODO(crbug.com/40284755): Migrate callers to the span variant.
 BASE_EXPORT int ReadFile(const FilePath& filename, char* data, int max_size);
 
+// Writes the given buffer into the file, overwriting any data that was
+// previously there.  Returns the number of bytes written, or -1 on error.
+// If file doesn't exist, it gets created with read/write permissions for all.
+// Note that the other variants of WriteFile() below may be easier to use.
+// TODO(crbug.com/40284755): Migrate callers to the span variant.
+UNSAFE_BUFFER_USAGE BASE_EXPORT int WriteFile(const FilePath& filename,
+                                              const char* data,
+                                              int size);
+
 // Writes |data| into the file, overwriting any data that was previously there.
 // Returns true if and only if all of |data| was written. If the file does not
 // exist, it gets created with read/write permissions for all.
diff --git a/base/files/file_util_posix.cc b/base/files/file_util_posix.cc
index c371e18ae8..f2eb238979 100644
--- a/base/files/file_util_posix.cc
+++ b/base/files/file_util_posix.cc
@@ -1071,18 +1071,24 @@ std::optional<uint64_t> ReadFile(const FilePath& filename, span<char> buffer) {
   return bytes_read;
 }
 
-bool WriteFile(const FilePath& filename, span<const uint8_t> data) {
+int WriteFile(const FilePath& filename, const char* data, int size) {
   ScopedBlockingCall scoped_blocking_call(FROM_HERE, BlockingType::MAY_BLOCK);
+  if (size < 0) {
+    return -1;
+  }
   int fd = HANDLE_EINTR(creat(filename.value().c_str(), 0666));
   if (fd < 0) {
-    return false;
+    return -1;
   }
 
-  bool success = WriteFileDescriptor(fd, data);
+  int bytes_written =
+      WriteFileDescriptor(fd, std::string_view(data, static_cast<size_t>(size)))
+          ? size
+          : -1;
   if (IGNORE_EINTR(close(fd)) < 0) {
-    return false;
+    return -1;
   }
-  return success;
+  return bytes_written;
 }
 
 bool WriteFileDescriptor(int fd, span<const uint8_t> data) {
-- 
2.47.0.338.g60cca15819-goog

