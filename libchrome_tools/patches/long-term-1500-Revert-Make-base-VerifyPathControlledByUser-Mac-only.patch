From 18a22868fa02255a49dec4df0fce0136aea25bbd Mon Sep 17 00:00:00 2001
From: Grace Cham <hscham@chromium.org>
Date: Wed, 11 May 2022 13:44:41 +0900
Subject: [PATCH] Revert "Make base::VerifyPathControlledByUser() Mac-only."

Revert of r980844 (crrev.com/c/3508824) since
base::VerifyPathControlledByUser is used in CrOS.

This reverts commit 9b16796d1ebbb68f7dc1f8adf2128fc4b00f4a61.

patch-name: long-term-1500-Revert-Make-base-VerifyPathControlledByUser-Mac-only.patch
Change-Id: I3b4595ad4891dc1a67bfdcf03f934971ff93f4df
---
 base/files/file_util.h           |  4 ++--
 base/files/file_util_posix.cc    |  4 +---
 base/files/file_util_unittest.cc | 12 ++++++------
 3 files changed, 9 insertions(+), 11 deletions(-)

diff --git a/base/files/file_util.h b/base/files/file_util.h
index 1d3fe9d1d7..020a9e316e 100644
--- a/base/files/file_util.h
+++ b/base/files/file_util.h
@@ -651,9 +651,7 @@ BASE_EXPORT bool SetCloseOnExec(int fd);
 // Returns true if it was able to remove the close-on-exec flag, otherwise
 // false.
 BASE_EXPORT bool RemoveCloseOnExec(int fd);
-#endif  // BUILDFLAG(IS_POSIX) || BUILDFLAG(IS_FUCHSIA)
 
-#if BUILDFLAG(IS_MAC)
 // Test that |path| can only be changed by a given user and members of
 // a given set of groups.
 // Specifically, test that all parts of |path| under (and including) |base|:
@@ -669,7 +667,9 @@ BASE_EXPORT bool VerifyPathControlledByUser(const base::FilePath& base,
                                             const base::FilePath& path,
                                             uid_t owner_uid,
                                             const std::set<gid_t>& group_gids);
+#endif  // BUILDFLAG(IS_POSIX) || BUILDFLAG(IS_FUCHSIA)
 
+#if BUILDFLAG(IS_MAC)
 // Is |path| writable only by a user with administrator privileges?
 // This function uses Mac OS conventions.  The super user is assumed to have
 // uid 0, and the administrator group is assumed to be named "admin".
diff --git a/base/files/file_util_posix.cc b/base/files/file_util_posix.cc
index acb98a7e3e..705202e1ea 100644
--- a/base/files/file_util_posix.cc
+++ b/base/files/file_util_posix.cc
@@ -77,7 +77,6 @@ namespace base {
 
 namespace {
 
-#if BUILDFLAG(IS_MAC)
 // Helper for VerifyPathControlledByUser.
 bool VerifySpecificPathControlledByUser(const FilePath& path,
                                         uid_t owner_uid,
@@ -113,7 +112,6 @@ bool VerifySpecificPathControlledByUser(const FilePath& path,
 
   return true;
 }
-#endif
 
 base::FilePath GetTempTemplate() {
   return FormatTemporaryFileName("XXXXXX");
@@ -1103,7 +1101,6 @@ bool SetCurrentDirectory(const FilePath& path) {
   return chdir(path.value().c_str()) == 0;
 }
 
-#if BUILDFLAG(IS_MAC)
 bool VerifyPathControlledByUser(const FilePath& base,
                                 const FilePath& path,
                                 uid_t owner_uid,
@@ -1139,6 +1136,7 @@ bool VerifyPathControlledByUser(const FilePath& base,
   return true;
 }
 
+#if BUILDFLAG(IS_MAC)
 bool VerifyPathControlledByAdmin(const FilePath& path) {
   const unsigned kRootUid = 0;
   const FilePath kFileSystemRoot("/");
diff --git a/base/files/file_util_unittest.cc b/base/files/file_util_unittest.cc
index ea3c7672aa..7a7d7a7e76 100644
--- a/base/files/file_util_unittest.cc
+++ b/base/files/file_util_unittest.cc
@@ -217,7 +217,9 @@ class ReparsePoint {
 
 #endif
 
-#if BUILDFLAG(IS_MAC)
+// Fuchsia doesn't support file permissions.
+#if !BUILDFLAG(IS_FUCHSIA)
+#if BUILDFLAG(IS_POSIX)
 // Provide a simple way to change the permissions bits on |path| in tests.
 // ASSERT failures will return, but not stop the test.  Caller should wrap
 // calls to this function in ASSERT_NO_FATAL_FAILURE().
@@ -233,10 +235,8 @@ void ChangePosixFilePermissions(const FilePath& path,
   mode &= ~mode_bits_to_clear;
   ASSERT_TRUE(SetPosixFilePermissions(path, mode));
 }
-#endif  // BUILDFLAG(IS_MAC)
+#endif  // BUILDFLAG(IS_POSIX)
 
-// Fuchsia doesn't support file permissions.
-#if !BUILDFLAG(IS_FUCHSIA)
 // Sets the source file to read-only.
 void SetReadOnly(const FilePath& path, bool read_only) {
 #if BUILDFLAG(IS_WIN)
@@ -4115,7 +4115,7 @@ TEST_F(FileUtilTest, SetCloseOnExec) {
 
 #endif
 
-#if BUILDFLAG(IS_MAC)
+#if BUILDFLAG(IS_POSIX)
 
 // Testing VerifyPathControlledByAdmin() is hard, because there is no
 // way a test can make a file owned by root, or change file paths
@@ -4399,7 +4399,7 @@ TEST_F(VerifyPathControlledByUserTest, WriteBitChecks) {
   EXPECT_TRUE(VerifyPathControlledByUser(sub_dir_, text_file_, uid_, ok_gids_));
 }
 
-#endif  // BUILDFLAG(IS_MAC)
+#endif  // BUILDFLAG(IS_POSIX)
 
 // Flaky test: crbug/1054637
 #if BUILDFLAG(IS_ANDROID)
-- 
2.43.0.rc0.421.g78406f8d94-goog

