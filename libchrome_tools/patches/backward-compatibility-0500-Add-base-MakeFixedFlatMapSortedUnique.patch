From 5c8d9cf6e0ddc97928702b6677c46ed1e0881da4 Mon Sep 17 00:00:00 2001
From: Andrew Moylan <amoylan@chromium.org>
Date: Tue, 16 Jan 2024 09:41:52 +1100
Subject: [PATCH] Add base::MakeFixedFlatMapSortedUnique

This adds base::MakeFixedFlatMapSortedUnique as a compatibility patch
for existing consteval-compatible use cases of
MakeFixedFlatMap(base::sorted_unique, ...). Such uses will eventually
migrate to base::MakeFixedFlatMap() in a future version of libchrome,
but cannot do so today because base::MakeFixedFlatMap() has a different
behavior (re. runtime sorting) today vs future libchrome.

Change-Id: Ief3b37ae668c931c424eb965dc32a1a025361192

---
 base/containers/fixed_flat_map.h | 21 +++++++++++++++++++++
 1 file changed, 21 insertions(+)

diff --git a/base/containers/fixed_flat_map.h b/base/containers/fixed_flat_map.h
index 7f8848dbba..f3446549c7 100644
--- a/base/containers/fixed_flat_map.h
+++ b/base/containers/fixed_flat_map.h
@@ -147,6 +147,27 @@ constexpr fixed_flat_map<Key, Mapped, N, Compare> MakeFixedFlatMapNonConsteval(
   return MakeFixedFlatMap(std::move(data), comp);
 }
 
+// In a future version of libchrome, MakeFixedFlatMap will become consteval, and
+// MakeFixedFlatMap(base::sorted_unique, ...) will be removed (any required
+// sorting will be silently done at compile time).
+// This function is equivalent to MakeFixedFlatMap(base::sorted_unique, ...).
+// Existing uses of MakeFixedFlatMap(base::sorted_unique, ...) should be
+// migrated to this function. After libchrome is updated, these uses should be
+// migrated to MakeFixedFlatMap and this function will be removed.
+template <class Key, class Mapped, size_t N, class Compare = std::less<>>
+constexpr fixed_flat_map<Key, Mapped, N, Compare> MakeFixedFlatMapSortedUnique(
+    std::pair<Key, Mapped> (&&data)[N],
+    const Compare& comp = Compare()) {
+  using FixedFlatMap = fixed_flat_map<Key, Mapped, N, Compare>;
+  typename FixedFlatMap::value_compare value_comp{comp};
+  CHECK(internal::is_sorted_and_unique(data, value_comp));
+  // Specify the value_type explicitly to ensure that the returned array has
+  // immutable keys.
+  return FixedFlatMap(
+      sorted_unique, internal::ToArray<typename FixedFlatMap::value_type>(data),
+      comp);
+}
+
 }  // namespace base
 
 #endif  // BASE_CONTAINERS_FIXED_FLAT_MAP_H_
-- 
2.43.0.275.g3460e3d667-goog

