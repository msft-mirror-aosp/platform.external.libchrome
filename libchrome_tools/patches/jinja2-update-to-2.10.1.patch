From ae5d36b6dabf9847e8163a3c3393d12b83ae6ffe Mon Sep 17 00:00:00 2001
From: Takuto Ikuta <tikuta@chromium.org>
Date: Wed, 11 Aug 2021 05:54:26 -0700
Subject: [PATCH] jinja2: update to 2.10.1

This is for https://nvd.nist.gov/vuln/detail/CVE-2019-10906

Bug: b/195428239
Change-Id: Ib174bbf1ff20fdad10c211c485916b244eca20d5
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/3089002
Commit-Queue: Takuto Ikuta <tikuta@chromium.org>
Auto-Submit: Takuto Ikuta <tikuta@chromium.org>
Reviewed-by: Kentaro Hara <haraken@chromium.org>
Reviewed-by: Yuki Shiino <yukishiino@chromium.org>
Cr-Commit-Position: refs/heads/master@{#910765}

CrOS-Libchrome-Original-Commit: 5ab138063add3f2a41f7a5eabd81d7c81abdfaa8
Change-Id: I7684ed8dc200b606728a00cf1aee535ac046b4f6
---
 third_party/jinja2/Jinja2-2.10.1.tar.gz.md5    |  1 +
 third_party/jinja2/Jinja2-2.10.1.tar.gz.sha512 |  1 +
 third_party/jinja2/Jinja2-2.10.tar.gz.md5      |  1 -
 third_party/jinja2/Jinja2-2.10.tar.gz.sha512   |  1 -
 third_party/jinja2/README.chromium             | 12 ++++++------
 third_party/jinja2/__init__.py                 |  2 +-
 third_party/jinja2/get_jinja2.sh               |  5 ++---
 third_party/jinja2/sandbox.py                  | 17 ++++++++++++++---
 8 files changed, 25 insertions(+), 15 deletions(-)
 create mode 100644 third_party/jinja2/Jinja2-2.10.1.tar.gz.md5
 create mode 100644 third_party/jinja2/Jinja2-2.10.1.tar.gz.sha512
 delete mode 100644 third_party/jinja2/Jinja2-2.10.tar.gz.md5
 delete mode 100644 third_party/jinja2/Jinja2-2.10.tar.gz.sha512

diff --git a/third_party/jinja2/Jinja2-2.10.1.tar.gz.md5 b/third_party/jinja2/Jinja2-2.10.1.tar.gz.md5
new file mode 100644
index 000000000..479d0d13c
--- /dev/null
+++ b/third_party/jinja2/Jinja2-2.10.1.tar.gz.md5
@@ -0,0 +1 @@
+0ae535be40fd215a8114a090c8b68e5a  Jinja2-2.10.1.tar.gz
diff --git a/third_party/jinja2/Jinja2-2.10.1.tar.gz.sha512 b/third_party/jinja2/Jinja2-2.10.1.tar.gz.sha512
new file mode 100644
index 000000000..217887094
--- /dev/null
+++ b/third_party/jinja2/Jinja2-2.10.1.tar.gz.sha512
@@ -0,0 +1 @@
+a00153a0e07bb7d67f301b4eaf7af657726a1985e9ffc7ae2d76bdbb4c062d672efc8065e398767e1039b18a483a0092e206deac91e4047aad64920b56869623  Jinja2-2.10.1.tar.gz
diff --git a/third_party/jinja2/Jinja2-2.10.tar.gz.md5 b/third_party/jinja2/Jinja2-2.10.tar.gz.md5
deleted file mode 100644
index 9137ee129..000000000
--- a/third_party/jinja2/Jinja2-2.10.tar.gz.md5
+++ /dev/null
@@ -1 +0,0 @@
-61ef1117f945486472850819b8d1eb3d  Jinja2-2.10.tar.gz
diff --git a/third_party/jinja2/Jinja2-2.10.tar.gz.sha512 b/third_party/jinja2/Jinja2-2.10.tar.gz.sha512
deleted file mode 100644
index 087d24c18..000000000
--- a/third_party/jinja2/Jinja2-2.10.tar.gz.sha512
+++ /dev/null
@@ -1 +0,0 @@
-0ea7371be67ffcf19e46dfd06523a45a0806e678a407d54f5f2f3e573982f0959cf82ec5d07b203670309928a62ef71109701ab16547a9bba2ebcdc178cb67f2  Jinja2-2.10.tar.gz
diff --git a/third_party/jinja2/README.chromium b/third_party/jinja2/README.chromium
index 9b8311a67..6829f47f1 100644
--- a/third_party/jinja2/README.chromium
+++ b/third_party/jinja2/README.chromium
@@ -1,8 +1,8 @@
 Name: Jinja2 Python Template Engine
 Short Name: jinja2
-URL: http://jinja.pocoo.org/
-Version: 2.10
-CPEPrefix: cpe:/a:pocoo:jinja2:2.10
+URL: https://jinja.palletsprojects.com/
+Version: 2.10.1
+CPEPrefix: cpe:/a:pocoo:jinja2:2.10.1
 License: BSD 3-Clause
 License File: LICENSE
 Security Critical: no
@@ -10,9 +10,9 @@ Security Critical: no
 Description:
 Template engine for code generation in Blink.
 
-Source: https://pypi.python.org/packages/56/e6/332789f295cf22308386cf5bbd1f4e00ed11484299c5d7383378cf48ba47/Jinja2-2.10.tar.gz
-MD5: 61ef1117f945486472850819b8d1eb3d
-SHA-1: 34b69e5caab12ee37b9df69df9018776c008b7b8
+Source: https://files.pythonhosted.org/packages/93/ea/d884a06f8c7f9b7afbc8138b762e80479fb17aedbbe2b06515a12de9378d/Jinja2-2.10.1.tar.gz
+MD5: 0ae535be40fd215a8114a090c8b68e5a
+SHA-512: a00153a0e07bb7d67f301b4eaf7af657726a1985e9ffc7ae2d76bdbb4c062d672efc8065e398767e1039b18a483a0092e206deac91e4047aad64920b56869623
 
 Local Modifications:
 This only includes the jinja2 directory from the tarball and the LICENSE and
diff --git a/third_party/jinja2/__init__.py b/third_party/jinja2/__init__.py
index 42aa763d5..15e13b6f2 100644
--- a/third_party/jinja2/__init__.py
+++ b/third_party/jinja2/__init__.py
@@ -27,7 +27,7 @@
     :license: BSD, see LICENSE for more details.
 """
 __docformat__ = 'restructuredtext en'
-__version__ = '2.10'
+__version__ = '2.10.1'
 
 # high level interface
 from jinja2.environment import Environment, Template
diff --git a/third_party/jinja2/get_jinja2.sh b/third_party/jinja2/get_jinja2.sh
index bc6c4c306..bbaf5d1c8 100755
--- a/third_party/jinja2/get_jinja2.sh
+++ b/third_party/jinja2/get_jinja2.sh
@@ -7,9 +7,8 @@
 # Download page:
 # https://pypi.python.org/pypi/Jinja2
 PACKAGE='Jinja2'
-VERSION='2.10'
-SRC_URL='https://pypi.python.org/packages/56/e6/332789f295cf22308386cf5bbd1f4e00ed11484299c5d7383378cf48ba47/Jinja2-2.10.tar.gz'
-PACKAGE_DIR='jinja2'
+VERSION='2.10.1'
+SRC_URL='https://files.pythonhosted.org/packages/93/ea/d884a06f8c7f9b7afbc8138b762e80479fb17aedbbe2b06515a12de9378d/Jinja2-2.10.1.tar.gz'
 
 CHROMIUM_FILES="README.chromium OWNERS get_jinja2.sh"
 EXTRA_FILES='LICENSE AUTHORS'
diff --git a/third_party/jinja2/sandbox.py b/third_party/jinja2/sandbox.py
index 93fb9d45f..752e81289 100644
--- a/third_party/jinja2/sandbox.py
+++ b/third_party/jinja2/sandbox.py
@@ -137,7 +137,7 @@ class _MagicFormatMapping(Mapping):
 def inspect_format_method(callable):
     if not isinstance(callable, (types.MethodType,
                                  types.BuiltinMethodType)) or \
-       callable.__name__ != 'format':
+       callable.__name__ not in ('format', 'format_map'):
         return None
     obj = callable.__self__
     if isinstance(obj, string_types):
@@ -402,7 +402,7 @@ class SandboxedEnvironment(Environment):
             obj.__class__.__name__
         ), name=attribute, obj=obj, exc=SecurityError)
 
-    def format_string(self, s, args, kwargs):
+    def format_string(self, s, args, kwargs, format_func=None):
         """If a format call is detected, then this is routed through this
         method so that our safety sandbox can be used for it.
         """
@@ -410,6 +410,17 @@ class SandboxedEnvironment(Environment):
             formatter = SandboxedEscapeFormatter(self, s.escape)
         else:
             formatter = SandboxedFormatter(self)
+
+        if format_func is not None and format_func.__name__ == 'format_map':
+            if len(args) != 1 or kwargs:
+                raise TypeError(
+                    'format_map() takes exactly one argument %d given'
+                    % (len(args) + (kwargs is not None))
+                )
+
+            kwargs = args[0]
+            args = None
+
         kwargs = _MagicFormatMapping(args, kwargs)
         rv = formatter.vformat(s, args, kwargs)
         return type(s)(rv)
@@ -418,7 +429,7 @@ class SandboxedEnvironment(Environment):
         """Call an object from sandboxed code."""
         fmt = inspect_format_method(__obj)
         if fmt is not None:
-            return __self.format_string(fmt, args, kwargs)
+            return __self.format_string(fmt, args, kwargs, __obj)
 
         # the double prefixes are to avoid double keyword argument
         # errors when proxying the call.
-- 
2.33.0.309.g3052b89438-goog

