From d67a3bee7af8d1009d3b04afac90420969517f7c Mon Sep 17 00:00:00 2001
From: Glen Robertson <glenrob@chromium.org>
Date: Tue, 11 Jul 2023 15:12:36 +0000
Subject: [PATCH] Add "typename" to flat_map template types using std::decay_t

IWYU tool gets confused and fails when "typename" isn't here, even though it's seemingly implied by these being "class" types.

Not sure why this is an issue for IWYU and not ninja, but it seems like this change isn't harmful to the ninja build. Maybe someone who knows more about templates can think about it :)

Change-Id: I21d0e4ea3e86bd80967c2ce18e8c08af997d87e6
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/4676975
Auto-Submit: Glen Robertson <glenrob@chromium.org>
Reviewed-by: danakj <danakj@chromium.org>
Commit-Queue: danakj <danakj@chromium.org>
Cr-Commit-Position: refs/heads/main@{#1168715}
---
 base/containers/flat_map.h | 9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)

diff --git a/base/containers/flat_map.h b/base/containers/flat_map.h
index 5a623461c687b..618b50d704066 100644
--- a/base/containers/flat_map.h
+++ b/base/containers/flat_map.h
@@ -387,10 +387,11 @@ constexpr flat_map<Key, Mapped, KeyCompare, Container> MakeFlatMap(
 // Mapped> elements. The container does not have to be sorted or contain only
 // unique keys; construction will automatically discard duplicate keys, keeping
 // only the first.
-template <class Container,
-          class Compare = std::less<>,
-          class Key = std::decay_t<Container>::value_type::first_type,
-          class Mapped = std::decay_t<Container>::value_type::second_type>
+template <
+    class Container,
+    class Compare = std::less<>,
+    class Key = typename std::decay_t<Container>::value_type::first_type,
+    class Mapped = typename std::decay_t<Container>::value_type::second_type>
 flat_map(Container&&, Compare comp = {})
     -> flat_map<Key, Mapped, Compare, std::decay_t<Container>>;
 
-- 
2.41.0.255.g8b1d071c50-goog

