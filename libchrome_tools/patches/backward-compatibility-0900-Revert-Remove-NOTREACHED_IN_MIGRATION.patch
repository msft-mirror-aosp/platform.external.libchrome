From 11901a97f7d1a14ce4f39a65a723661ed6f9cd2c Mon Sep 17 00:00:00 2001
From: Cici Ruan <cuicuiruan@google.com>
Date: Thu, 19 Dec 2024 17:22:36 -0800
Subject: [PATCH] Revert "Remove NOTREACHED_IN_MIGRATION()"

This reverts commit 5e342fc336640bad90e2cecb96415e37bd720e97.

Change-Id: I40d6386d02e106049d1afc0288b742e3951a264b
---
 base/check.cc     |  7 +++++++
 base/check.h      | 14 ++++++++------
 base/notreached.h | 14 ++++++++++++++
 3 files changed, 29 insertions(+), 6 deletions(-)

diff --git a/base/check.cc b/base/check.cc
index 87fcaf4132..04440b3ce9 100644
--- a/base/check.cc
+++ b/base/check.cc
@@ -425,6 +425,13 @@ NotReachedError NotReachedError::NotReached(base::NotFatalUntil fatal_milestone,
   return NotReachedError(log_message);
 }
 
+void NotReachedError::TriggerNotReached() {
+  // This triggers a NOTREACHED_IN_MIGRATION() error as the returned
+  // NotReachedError goes out of scope.
+  NotReached()
+      << "NOTREACHED log messages are omitted in official builds. Sorry!";
+}
+
 NotReachedError::~NotReachedError() = default;
 
 NotReachedNoreturnError::NotReachedNoreturnError(const base::Location& location)
diff --git a/base/check.h b/base/check.h
index 231b42bb6b..729caa0466 100644
--- a/base/check.h
+++ b/base/check.h
@@ -189,14 +189,16 @@ class BASE_EXPORT CheckNoreturnError : public CheckError {
 class BASE_EXPORT NotReachedError : public CheckError {
  public:
   static NotReachedError NotReached(
-      base::NotFatalUntil fatal_milestone,
-      const base::Location& location =
-          base::Location::CurrentWithoutFunctionName());
+      base::NotFatalUntil fatal_milestone =
+          base::NotFatalUntil::NoSpecifiedMilestoneInternal,
+      const base::Location& location = base::Location::Current());
 
-  static NotReachedError DumpWillBeNotReached(
-      const base::Location& location =
-          base::Location::CurrentWithoutFunctionName());
+  // Used to trigger a NOTREACHED_IN_MIGRATION() without providing file or line
+  // while also discarding log-stream arguments. See base/notreached.h.
+  NOMERGE NOINLINE NOT_TAIL_CALLED static void TriggerNotReached();
 
+  // TODO(crbug.com/40580068): Mark [[noreturn]] once this is CHECK-fatal on all
+  // builds.
   NOMERGE NOINLINE NOT_TAIL_CALLED ~NotReachedError();
 
  private:
diff --git a/base/notreached.h b/base/notreached.h
index 1fef9ab3d7..e4c8a34c45 100644
--- a/base/notreached.h
+++ b/base/notreached.h
@@ -16,6 +16,20 @@
 
 namespace logging {
 
+// Migration in progress: For new code use NOTREACHED() or
+// NOTREACHED(base::NotFatalUntil::M*). NOTREACHED_IN_MIGRATION() is equally
+// fatal to NOTREACHED() without parameters but not annotated as [[noreturn]].
+#if CHECK_WILL_STREAM()
+#define NOTREACHED_IN_MIGRATION() \
+  LOGGING_CHECK_FUNCTION_IMPL(::logging::NotReachedError::NotReached(), false)
+#else
+#define NOTREACHED_IN_MIGRATION()                          \
+  (true) ? ::logging::NotReachedError::TriggerNotReached() \
+         : EAT_CHECK_STREAM_PARAMS()
+#endif
+
+// Migration in progress: Use NOTREACHED() directly without parameters instead.
+// TODO(crbug.com/40580068): Merge this with NOTREACHED().
 #if CHECK_WILL_STREAM()
 #define NOTREACHED_INTERNAL_IMPL() ::logging::NotReachedNoreturnError()
 #else
-- 
2.47.1.613.gc27f4b7a9f-goog

