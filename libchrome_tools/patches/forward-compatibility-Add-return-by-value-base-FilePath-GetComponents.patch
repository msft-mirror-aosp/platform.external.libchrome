From b2efcc5101e2c73d9feae84ee9b17e95e15e8ccf Mon Sep 17 00:00:00 2001
From: hscham <hscham@chromium.org>
Date: Thu, 21 Apr 2022 16:36:48 +0900
Subject: [PATCH] Add return by value version of base::FilePath::GetComponents

Forward compatibility for uprev to >r970764 (crrev.com/c/3456906).
The return by out-param version will be removed.

Change-Id: Id5babfbeeeee6c757d61e6dca0eef8c04680b483
---
 base/files/file_path.cc | 6 ++++++
 base/files/file_path.h  | 1 +
 2 files changed, 7 insertions(+)

diff --git a/base/files/file_path.cc b/base/files/file_path.cc
index 6f23db7b00..5a1b7c30a9 100644
--- a/base/files/file_path.cc
+++ b/base/files/file_path.cc
@@ -262,6 +262,12 @@ void FilePath::GetComponents(std::vector<StringType>* components) const {
   *components = std::vector<StringType>(ret_val.rbegin(), ret_val.rend());
 }
 
+std::vector<FilePath::StringType> FilePath::GetComponents() const {
+  std::vector<FilePath::StringType> components;
+  GetComponents(&components);
+  return components;
+}
+
 bool FilePath::IsParent(const FilePath& child) const {
   return AppendRelativePath(child, nullptr);
 }
diff --git a/base/files/file_path.h b/base/files/file_path.h
index f682780ecc..29e2a840f7 100644
--- a/base/files/file_path.h
+++ b/base/files/file_path.h
@@ -224,6 +224,7 @@ class BASE_EXPORT FilePath {
   // Posix:  "/foo/bar"  ->  [ "/", "foo", "bar" ]
   // Windows:  "C:\foo\bar"  ->  [ "C:", "\\", "foo", "bar" ]
   void GetComponents(std::vector<FilePath::StringType>* components) const;
+  std::vector<FilePath::StringType> GetComponents() const;
 
   // Returns true if this FilePath is a parent or ancestor of the |child|.
   // Absolute and relative paths are accepted i.e. /foo is a parent to /foo/bar,
-- 
2.36.0.rc2.479.g8af0fa9b8e-goog

