From dd7604c92f9a67028bcfeb9eef2171d5461b1690 Mon Sep 17 00:00:00 2001
From: Grace Cham <hscham@chromium.org>
Date: Tue, 13 Sep 2022 08:34:40 +0900
Subject: [PATCH 1/3] Revert "[posix] Terminate processes with SIGKILL when bad
 message seen."

This reverts commit 6107973f8643da639280ec3505ea0644320ad42c.
---
 base/process/process_posix.cc | 15 ---------------
 1 file changed, 15 deletions(-)

diff --git a/base/process/process_posix.cc b/base/process/process_posix.cc
index bddae2a86e04..f9f633a9fa1d 100644
--- a/base/process/process_posix.cc
+++ b/base/process/process_posix.cc
@@ -326,21 +326,6 @@ bool Process::Terminate(int exit_code, bool wait) const {
   DCHECK(IsValid());
   CHECK_GT(process_, 0);
 
-  // RESULT_CODE_KILLED_BAD_MESSAGE == 3, but layering prevents its use.
-  // |wait| is always false when terminating badly-behaved processes.
-  const bool maybe_compromised = !wait && exit_code == 3;
-  if (maybe_compromised) {
-    // Forcibly terminate the process immediately.
-    const bool was_killed = kill(process_, SIGKILL) != 0;
-#if BUILDFLAG(IS_CHROMEOS)
-    if (was_killed)
-      CleanUpProcessAsync();
-#endif
-    DPLOG_IF(ERROR, !was_killed) << "Unable to terminate process " << process_;
-    return was_killed;
-  }
-
-  // Terminate process giving it a chance to clean up.
   if (kill(process_, SIGTERM) != 0) {
     DPLOG(ERROR) << "Unable to terminate process " << process_;
     return false;
-- 
2.37.2.789.g6183377224-goog

