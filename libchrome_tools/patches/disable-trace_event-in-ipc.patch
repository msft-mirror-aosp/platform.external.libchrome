From f99cce06890e98dfa7cc28ff9d18dd32e4eb0436 Mon Sep 17 00:00:00 2001
From: hscham <hscham@chromium.org>
Date: Thu, 30 Sep 2021 10:26:24 +0900
Subject: [PATCH] Remove use of trace_event in ipc

Change-Id: I84d582f0a384a935c9a16dcbf59cc6dfbdcd2bf7
---
 ipc/ipc_message.cc | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/ipc/ipc_message.cc b/ipc/ipc_message.cc
index 688bd0fac..920566e9c 100644
--- a/ipc/ipc_message.cc
+++ b/ipc/ipc_message.cc
@@ -17,7 +17,7 @@
 
 #include "base/atomic_sequence_num.h"
 #include "base/logging.h"
-#include "base/trace_event/trace_event.h"
+#include "base/trace_event/trace_event_stub.h"
 #include "build/build_config.h"
 #include "ipc/ipc_message_attachment.h"
 #include "ipc/ipc_message_attachment_set.h"
@@ -35,9 +35,13 @@ base::AtomicSequenceNumber g_ref_num;
 // values has the reference number stored in the upper 24 bits, leaving the low
 // 8 bits set to 0 for use as flags.
 inline uint32_t GetRefNumUpper24() {
+#if 0
   base::trace_event::TraceLog* trace_log =
       base::trace_event::TraceLog::GetInstance();
   uint32_t pid = trace_log ? trace_log->process_id() : 0;
+#else
+  uint32_t pid = 0;
+#endif
   uint32_t count = g_ref_num.GetNext();
   // The 24 bit hash is composed of 14 bits of the count and 10 bits of the
   // Process ID. With the current trace event buffer cap, the 14-bit count did
-- 
2.33.0.685.g46640cef36-goog

