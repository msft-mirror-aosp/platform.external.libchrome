From 5d912d3c3823b4ac6bdaec7441075f56b24afd8a Mon Sep 17 00:00:00 2001
From: hscham <hscham@chromium.org>
Date: Thu, 11 Nov 2021 15:50:00 +0900
Subject: [PATCH 4/4] Fix ipc build with enable_base_tracing=false

This is the second CL in a series of CL that will fix base, ipc, mojo
build with base tracing disabled.

trace_event is not supported in libchrome, and local patches are
currently applied to replace trace_event headers by stub or commenting
out relevant lines manually, although there is a build flag
enable_base_tracing which could be used for disabling it.

Fix the build in libchrome components on chromium upstream when the flag
is set to false, so that libchrome does not need to maintain the
divergence.

Most of the compile errors are caused by redefinition of classes or
functions when both the stub and real headers are included, and can be
fixed by including the proxy header base/trace_event/base_tracing.h
instead.

Bug: b:204714883
Test: autoninja -C out/Default chrome (ENABLE_BASE_TRACING=true)
---
 ipc/ipc_channel_mojo.cc        |  3 +++
 ipc/ipc_message.cc             |  2 +-
 ipc/ipc_message_pipe_reader.cc |  2 +-
 ipc/ipc_message_templates.h    |  2 +-
 ipc/ipc_mojo_bootstrap.cc      |  4 +---
 ipc/ipc_sync_channel.cc        |  2 +-
 ipc/ipc_sync_message_filter.cc |  2 +-
 ipc/trace_ipc_message.h        | 10 +++++++++-
 8 files changed, 18 insertions(+), 10 deletions(-)

diff --git a/ipc/ipc_channel_mojo.cc b/ipc/ipc_channel_mojo.cc
index a00aaa809229..b679c0f9ba83 100644
--- a/ipc/ipc_channel_mojo.cc
+++ b/ipc/ipc_channel_mojo.cc
@@ -310,6 +310,9 @@ void ChannelMojo::OnMessageReceived(const Message& message) {
   const Message* message_ptr = &message;
   TRACE_IPC_MESSAGE_SEND("ipc,toplevel", "ChannelMojo::OnMessageReceived",
                          message_ptr);
+  // TRACE_* macro above drops the prarameter message_ptr when tracing is
+  // disabled
+  ignore_result(message_ptr);
   listener_->OnMessageReceived(message);
   if (message.dispatch_error())
     listener_->OnBadMessageReceived(message);
diff --git a/ipc/ipc_message.cc b/ipc/ipc_message.cc
index 688bd0fac4b0..2204f9c44f66 100644
--- a/ipc/ipc_message.cc
+++ b/ipc/ipc_message.cc
@@ -17,7 +17,7 @@
 
 #include "base/atomic_sequence_num.h"
 #include "base/logging.h"
-#include "base/trace_event/trace_event.h"
+#include "base/trace_event/base_tracing.h"
 #include "build/build_config.h"
 #include "ipc/ipc_message_attachment.h"
 #include "ipc/ipc_message_attachment_set.h"
diff --git a/ipc/ipc_message_pipe_reader.cc b/ipc/ipc_message_pipe_reader.cc
index f253fba9c31d..13c86dea1007 100644
--- a/ipc/ipc_message_pipe_reader.cc
+++ b/ipc/ipc_message_pipe_reader.cc
@@ -16,7 +16,7 @@
 #include "base/macros.h"
 #include "base/task/single_thread_task_runner.h"
 #include "base/threading/thread_task_runner_handle.h"
-#include "base/trace_event/trace_event.h"
+#include "base/trace_event/base_tracing.h"
 #include "ipc/ipc_channel_mojo.h"
 #include "mojo/public/cpp/bindings/message.h"
 #include "mojo/public/cpp/bindings/thread_safe_proxy.h"
diff --git a/ipc/ipc_message_templates.h b/ipc/ipc_message_templates.h
index dc49e2e9800e..2b5bec402211 100644
--- a/ipc/ipc_message_templates.h
+++ b/ipc/ipc_message_templates.h
@@ -13,7 +13,7 @@
 
 #include "base/check.h"
 #include "base/notreached.h"
-#include "base/trace_event/trace_event.h"
+#include "base/trace_event/base_tracing.h"
 #include "base/tuple.h"
 #include "build/build_config.h"
 #include "ipc/ipc_message.h"
diff --git a/ipc/ipc_mojo_bootstrap.cc b/ipc/ipc_mojo_bootstrap.cc
index 18b4dc9be5bf..df3d26dc372e 100644
--- a/ipc/ipc_mojo_bootstrap.cc
+++ b/ipc/ipc_mojo_bootstrap.cc
@@ -29,10 +29,7 @@
 #include "base/threading/thread_checker.h"
 #include "base/threading/thread_local.h"
 #include "base/threading/thread_task_runner_handle.h"
-#include "base/trace_event/memory_allocator_dump.h"
-#include "base/trace_event/memory_dump_manager.h"
-#include "base/trace_event/memory_dump_provider.h"
-#include "base/trace_event/typed_macros.h"
+#include "base/trace_event/base_tracing.h"
 #include "ipc/ipc_channel.h"
 #include "mojo/public/cpp/bindings/associated_group.h"
 #include "mojo/public/cpp/bindings/associated_group_controller.h"
diff --git a/ipc/ipc_sync_channel.cc b/ipc/ipc_sync_channel.cc
index da220c2aac4d..2ff4f5a2cdec 100644
--- a/ipc/ipc_sync_channel.cc
+++ b/ipc/ipc_sync_channel.cc
@@ -20,7 +20,7 @@
 #include "base/task/sequenced_task_runner.h"
 #include "base/threading/thread_local.h"
 #include "base/threading/thread_task_runner_handle.h"
-#include "base/trace_event/trace_event.h"
+#include "base/trace_event/base_tracing.h"
 #include "build/build_config.h"
 #include "ipc/ipc_channel_factory.h"
 #include "ipc/ipc_logging.h"
diff --git a/ipc/ipc_sync_message_filter.cc b/ipc/ipc_sync_message_filter.cc
index 57bd78f1bcee..77f35a7b4073 100644
--- a/ipc/ipc_sync_message_filter.cc
+++ b/ipc/ipc_sync_message_filter.cc
@@ -11,7 +11,7 @@
 #include "base/memory/ref_counted.h"
 #include "base/synchronization/waitable_event.h"
 #include "base/threading/thread_task_runner_handle.h"
-#include "base/trace_event/trace_event.h"
+#include "base/trace_event/base_tracing.h"
 #include "ipc/ipc_channel.h"
 #include "ipc/ipc_sync_message.h"
 #include "mojo/public/cpp/bindings/associated_receiver.h"
diff --git a/ipc/trace_ipc_message.h b/ipc/trace_ipc_message.h
index 44d4792cf942..8a8eaf382505 100644
--- a/ipc/trace_ipc_message.h
+++ b/ipc/trace_ipc_message.h
@@ -8,8 +8,12 @@
 #include <stdint.h>
 
 #include "base/component_export.h"
-#include "services/tracing/public/cpp/perfetto/macros.h"
+#include "base/trace_event/base_tracing.h"
+#include "base/tracing_buildflags.h"
+
+#if BUILDFLAG(ENABLE_BASE_TRACING)
 #include "third_party/perfetto/protos/perfetto/trace/track_event/chrome_legacy_ipc.pbzero.h"
+#endif  // BUILDFLAG(ENABLE_BASE_TRACING)
 
 // When tracing is enabled, emits a trace event with the given category and
 // event name and typed arguments for the message's type (message class and line
@@ -20,6 +24,8 @@
                                       ctx.event()->set_chrome_legacy_ipc()); \
   });
 
+#if BUILDFLAG(ENABLE_BASE_TRACING)
+
 namespace IPC {
 
 // Converts |message_id| into its message class and line number parts and writes
@@ -30,4 +36,6 @@ void COMPONENT_EXPORT(IPC)
 
 }  // namespace IPC
 
+#endif  // BUILDFLAG(ENABLE_BASE_TRACING)
+
 #endif  // IPC_TRACE_IPC_MESSAGE_H_
-- 
2.34.1.400.ga245620fadb-goog
