From a1a50f5fd98bf46a69cb5fb79aeb385e9f88d09e Mon Sep 17 00:00:00 2001
From: Ren-Pei Zeng <kamesan@chromium.org>
Date: Thu, 27 Apr 2023 10:20:21 +0000
Subject: [PATCH] Revert "[Code Health] Remove unused
 base::Value::SetDoubleKey"

This reverts commit 620a7c5741a8d5842933472ce214f2d13da83ad5.
---
 base/values.cc | 4 ++++
 base/values.h  | 2 ++
 2 files changed, 6 insertions(+)

diff --git a/base/values.cc b/base/values.cc
index 81eda15632..a776651656 100644
--- a/base/values.cc
+++ b/base/values.cc
@@ -1224,6 +1224,10 @@ const Value* Value::FindPath(StringPiece path) const {
   return GetDict().FindByDottedPath(path);
 }
 
+Value* Value::SetDoubleKey(StringPiece key, double value) {
+  return GetDict().Set(key, value);
+}
+
 absl::optional<bool> Value::FindBoolPath(StringPiece path) const {
   return GetDict().FindBoolByDottedPath(path);
 }
diff --git a/base/values.h b/base/values.h
index c366d5f278..37f8cd6bd0 100644
--- a/base/values.h
+++ b/base/values.h
@@ -819,6 +819,8 @@ class BASE_EXPORT GSL_OWNER Value {
   // DEPRECATED: Prefer `Value::Dict::FindByDottedPath()`.
   Value* FindPath(StringPiece path);
   const Value* FindPath(StringPiece path) const;
+  // DEPRECATED: Prefer `Value::Dict::Set()`.
+  Value* SetDoubleKey(StringPiece key, double val);
 
   // Convenience accessors used when the expected type of a value is known.
   // Similar to Find<Type>Key() but accepts paths instead of keys.
-- 
2.40.1.698.g37aff9b760-goog

