From 50b82ff62952bbeb5a032a641bf989ef7763d8e8 Mon Sep 17 00:00:00 2001
From: hscham <hscham@chromium.org>
Date: Thu, 21 Apr 2022 17:10:28 +0900
Subject: [PATCH] Remove deprecated GetAsString

For libchrome uprev to >r971651 (crrev.com/c/3445801).

Change-Id: I510839a308fa21de2adac18f6481cca923997458
---
 base/values.cc | 42 ++++++++----------------------------------
 base/values.h  |  5 -----
 2 files changed, 8 insertions(+), 39 deletions(-)

diff --git a/base/values.cc b/base/values.cc
index f5fdad85a5..39ce6a4079 100644
--- a/base/values.cc
+++ b/base/values.cc
@@ -808,38 +808,6 @@ void Value::MergeDictionary(const Value* dictionary) {
   }
 }
 
-bool Value::GetAsString(std::string* out_value) const {
-  if (out_value && is_string()) {
-    *out_value = GetString();
-    return true;
-  }
-  return is_string();
-}
-
-bool Value::GetAsString(std::u16string* out_value) const {
-  if (out_value && is_string()) {
-    *out_value = UTF8ToUTF16(GetString());
-    return true;
-  }
-  return is_string();
-}
-
-bool Value::GetAsString(const Value** out_value) const {
-  if (out_value && is_string()) {
-    *out_value = this;
-    return true;
-  }
-  return is_string();
-}
-
-bool Value::GetAsString(StringPiece* out_value) const {
-  if (out_value && is_string()) {
-    *out_value = GetString();
-    return true;
-  }
-  return is_string();
-}
-
 bool Value::GetAsList(ListValue** out_value) {
   if (out_value && is_list()) {
     *out_value = static_cast<ListValue*>(this);
@@ -1199,7 +1167,10 @@ bool DictionaryValue::GetString(StringPiece path,
   if (!Get(path, &value))
     return false;
 
-  return value->GetAsString(out_value);
+  const bool is_string = value->is_string();
+  if (is_string && out_value)
+    *out_value = value->GetString();
+  return is_string;
 }
 
 bool DictionaryValue::GetString(StringPiece path,
@@ -1208,7 +1179,10 @@ bool DictionaryValue::GetString(StringPiece path,
   if (!Get(path, &value))
     return false;
 
-  return value->GetAsString(out_value);
+  const bool is_string = value->is_string();
+  if (is_string && out_value)
+    *out_value = UTF8ToUTF16(value->GetString());
+  return is_string;
 }
 
 bool DictionaryValue::GetStringASCII(StringPiece path,
diff --git a/base/values.h b/base/values.h
index 198e81e5e7..7a7c73480a 100644
--- a/base/values.h
+++ b/base/values.h
@@ -530,11 +530,6 @@ class BASE_EXPORT Value {
   // If the current object can be converted into the given type, the value is
   // returned through the `out_value` parameter and true is returned;
   // otherwise, false is returned and `out_value` is unchanged.
-  // DEPRECATED, use `GetIfString()` instead.
-  bool GetAsString(std::string* out_value) const;
-  bool GetAsString(std::u16string* out_value) const;
-  bool GetAsString(const Value** out_value) const;
-  bool GetAsString(StringPiece* out_value) const;
   // ListValue::From is the equivalent for std::unique_ptr conversions.
   // DEPRECATED, use `is_list()` instead.
   bool GetAsList(ListValue** out_value);
-- 
2.36.0.550.gb090851708-goog

