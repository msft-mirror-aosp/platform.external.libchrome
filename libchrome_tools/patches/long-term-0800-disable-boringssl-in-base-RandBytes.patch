From c09df3f4c1d3750f08135c2544cfed827af9fed1 Mon Sep 17 00:00:00 2001
From: Grace Cham <hscham@chromium.org>
Date: Tue, 18 Oct 2022 14:30:08 +0900
Subject: [PATCH] disable boringssl in base::RandBytes

Introduced in r1045239 (crrev.com/c/3880863).

Change-Id: I03b1ad34f9b4b9bd20b8cfb9f3d77d06ddc8b43a
patch-name: long-term-0800-disable-boringssl-in-base-RandBytes.patch
---
 base/feature_list.cc    | 2 +-
 base/rand_util.h        | 2 +-
 base/rand_util_posix.cc | 6 +++---
 3 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/base/feature_list.cc b/base/feature_list.cc
index 82adc98ad4..c78f774182 100644
--- a/base/feature_list.cc
+++ b/base/feature_list.cc
@@ -584,7 +584,7 @@ void FeatureList::SetInstance(std::unique_ptr<FeatureList> instance) {
   // FeatureList instance, as the state of the involved Features might change
   // with the final FeatureList for this process.
   if (!g_feature_list_instance->IsEarlyAccessInstance()) {
-#if !BUILDFLAG(IS_NACL)
+#if !BUILDFLAG(IS_NACL) && 0
     // Configured first because it takes precedence over the getrandom() trial.
     internal::ConfigureBoringSSLBackedRandBytesFieldTrial();
 #endif
diff --git a/base/rand_util.h b/base/rand_util.h
index 00e901a326..29bae73c2f 100644
--- a/base/rand_util.h
+++ b/base/rand_util.h
@@ -38,7 +38,7 @@ namespace internal {
 void ConfigureRandBytesFieldTrial();
 #endif
 
-#if !BUILDFLAG(IS_NACL)
+#if !BUILDFLAG(IS_NACL) && 0
 void ConfigureBoringSSLBackedRandBytesFieldTrial();
 #endif
 
diff --git a/base/rand_util_posix.cc b/base/rand_util_posix.cc
index d0da3d7cd3..967587fc34 100644
--- a/base/rand_util_posix.cc
+++ b/base/rand_util_posix.cc
@@ -31,7 +31,7 @@
 #include <sys/random.h>
 #endif
 
-#if !BUILDFLAG(IS_NACL)
+#if !BUILDFLAG(IS_NACL) && 0
 #include "third_party/boringssl/src/include/openssl/crypto.h"
 #include "third_party/boringssl/src/include/openssl/rand.h"
 #endif
@@ -149,9 +149,9 @@ void ConfigureRandBytesFieldTrial() {
 }
 #endif
 
+#if !BUILDFLAG(IS_NACL) && 0
 namespace {
 
-#if !BUILDFLAG(IS_NACL)
 // The BoringSSl helpers are duplicated in rand_util_fuchsia.cc and
 // rand_util_win.cc.
 std::atomic<bool> g_use_boringssl;
@@ -177,7 +177,7 @@ bool UseBoringSSLForRandBytes() {
 namespace {
 
 void RandBytes(span<uint8_t> output, bool avoid_allocation) {
-#if !BUILDFLAG(IS_NACL)
+#if !BUILDFLAG(IS_NACL) && 0
   // The BoringSSL experiment takes priority over everything else.
   if (!avoid_allocation && internal::UseBoringSSLForRandBytes()) {
     // Ensure BoringSSL is initialized so it can use things like RDRAND.
-- 
2.43.0.275.g3460e3d667-goog

