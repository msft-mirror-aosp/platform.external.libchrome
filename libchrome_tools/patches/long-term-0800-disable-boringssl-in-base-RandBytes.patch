From 5b2d83a30966a7409e8bc69ff92a0994224f0249 Mon Sep 17 00:00:00 2001
From: Brett Brotherton <bbrotherton@google.com>
Date: Thu, 10 Aug 2023 18:16:56 -0600
Subject: [PATCH] [PATCH] disable boringssl in base::RandBytes

-Introduced in r1045239 (crrev.com/c/3880863)
-original patch by hscham, updated by bbrotherton in r1181877

Change-Id: Ifeb1d7a0629580966e904e84386eac40c92a3b96
---
 base/rand_util_posix.cc | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

diff --git a/base/rand_util_posix.cc b/base/rand_util_posix.cc
index 24a11a1f9c..c64c41f3af 100644
--- a/base/rand_util_posix.cc
+++ b/base/rand_util_posix.cc
@@ -11,7 +11,7 @@
 #include "base/posix/eintr_wrapper.h"
 #include "build/build_config.h"
 
-#if !BUILDFLAG(IS_NACL)
+#if !BUILDFLAG(IS_NACL) && 0
 #include "third_party/boringssl/src/include/openssl/crypto.h"
 #include "third_party/boringssl/src/include/openssl/rand.h"
 #endif
@@ -49,12 +49,17 @@ double RandDoubleAvoidAllocation() {
 }  // namespace internal
 
 void RandBytes(void* output, size_t output_length) {
-#if !BUILDFLAG(IS_NACL)
+#if !BUILDFLAG(IS_NACL) && 0
   // Ensure BoringSSL is initialized so it can use things like RDRAND.
   CRYPTO_library_init();
   // BoringSSL's RAND_bytes always returns 1. Any error aborts the program.
   (void)RAND_bytes(static_cast<uint8_t*>(output), output_length);
 #endif
+  // ChromeOS does not use BoringSSL so just use /dev/urandom
+  const int urandom_fd = GetUrandomFD();
+  const bool success =
+      ReadFromFD(urandom_fd, static_cast<char*>(output), output_length);
+  CHECK(success);
 }
 
 int GetUrandomFD() {
-- 
2.41.0.640.ga95def55d0-goog

