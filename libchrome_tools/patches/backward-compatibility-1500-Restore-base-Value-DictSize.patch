From bba3eb6955d5bbe7d4075ff3fc03cf68430203e2 Mon Sep 17 00:00:00 2001
From: Cici Ruan <cuicuiruan@google.com>
Date: Wed, 10 May 2023 20:09:53 -0700
Subject: [PATCH] Restore usage of base::Value::DictSize

This restores base::Value::DictSize for the packages which are still
using the deprecated function.
---
 base/values.cc                                               | 4 ++++
 base/values.h                                                | 3 +++
 components/sync/protocol/proto_value_conversions_unittest.cc | 2 +-
 3 files changed, 8 insertions(+), 1 deletion(-)

diff --git a/base/values.cc b/base/values.cc
index 0b1b6886475d7..1ce3c79925026 100644
--- a/base/values.cc
+++ b/base/values.cc
@@ -1232,6 +1232,10 @@ Value* Value::FindListPath(StringPiece path) {
   return const_cast<Value*>(std::as_const(*this).FindListPath(path));
 }
 
+size_t Value::DictSize() const {
+  return GetDict().size();
+}
+
 bool operator==(const Value& lhs, const Value& rhs) {
   return lhs.data_ == rhs.data_;
 }
diff --git a/base/values.h b/base/values.h
index 1c393ebdac1b7..6291ed500e1ef 100644
--- a/base/values.h
+++ b/base/values.h
@@ -838,6 +838,9 @@ class BASE_EXPORT GSL_OWNER Value {
   Value* FindListPath(StringPiece path);
   const Value* FindListPath(StringPiece path) const;
 
+  // DEPRECATED: prefer `Value::Dict::size()`.
+  size_t DictSize() const;
+
   // Note: Do not add more types. See the file-level comment above for why.
 
   // Comparison operators so that Values can easily be used with standard
-- 
2.40.1.521.gf1e218fcd8-goog

