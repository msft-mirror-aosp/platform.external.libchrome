# This file will be used by emerge in libchrome-XXXX.ebuild to determine the
# order of applying patches.
#
# Support selectively applying patch by use flag, examples:
# * To apply foo.patch to every board, add
#   `foo.patch`
# * To apply foo.patch to board bar only, add
#   `foo.patch board_use_bar`
# * To apply foo.patch to board installing package baz only, add
#   `foo.patch board_use_baz`
# Note: add flag to IUSE in libchrome ebuild if it is not already there.

# ========= LONG TERM PATCHES =========================
Add-libchrome-specific-build-configs.patch

# Unsupported in libchrome
disable-SharedMemoryTracker.patch

# ICU dependency was introduced for Explode implementation to tackle Y2038
# problem but it signigicantly increases binary size. Removed as Y2038 boards
# will be EOL by then.
Remove-ICU-dependency-for-base-Time-Explode.patch

# Disable custom memory allocator when asan is used.
disable-allocator-sanitizer.patch

# Refer to crbug/1093642 on upstream or abandon these two patches.
# Add MockObjectManager, which is removed upstream.
add-mock-object-manager.patch

# Solve name conflict with abseil in absl package, when a program in Chromium
# OS depends on both abseil and libchrome.
absl-thread-annotation-conflict.patch

# Diagnostic code for upsteram to investigate crbug/1001171.
# We don't need.
revert-crbug-1001171.patch

# libchrome does not support boringssl.
keep-hash-sha1-old-implementation.patch
Do-not-use-boringssl-in-base-UnguessableToken.patch

# Some bots might not support libc wrapped getrandom syscall
Call-getrandom-via-Linux-Syscall-Support.patch

# libchrome does not support trace_event
# Compatmentalize patches to reduce chance of failing to apply them.
disable-trace_event-in-base.patch
disable-trace_event-in-mojo.patch
disable-trace_event-in-ipc.patch
# To avoid redefinition error when client packages uses real perfetto
add-libchrome-namespace-to-trace_event-stub-perfetto.sh

# Revert of r921558
# When malloc of more than (or close to) max size is called, it should return
# nullptr (and handled by caller) instead of crashing as the original patch
# will do.
Revert-base-allocator-Support-max-alloc-size-with-us.patch

# Avoid reintroduction of the deprecated base::Value APIs
disable-base-Dictionary-List-Value.patch

# Libchrome prefer to have consistent include headers across debug or
# non-debug, since release builders have a lot delay. That may cuase our client
# program unable to discover compilation failure at CQ/postsubmit.
always-include-platform-thread-h.patch

# Revert of r980844 (crrev.com/c/3508824) since base::VerifyPathControlledByUser
# is used in CrOS.
Revert-Make-base-VerifyPathControlledByUser-Mac-only.patch

# TODO(b/229799189): Remove once performance problems with spaced in chrome
# are fixed.
libchrome-Query-spaced-for-free-total-disk-space.patch

# ==================== CHERRY PICKS ===========================
# Cherry-pick [Extensible] support for union.
# Cherry-pick of r991539
Make-mojo-attributes-from-enums-be-EnumValue.patch
# Cherry-pick of r993092
Mojo-Extensible-union-support.patch

# ==================== BACKWARD / FORWARD COMPATIBILITY PATCHES FOR UPREVS ===
# Backward compatibility for r890000 uprev
# Adds base::Callback, base::Bind, etc as there are still many usages in CrOS
# TODO(crbug.com/1205291): remove when they are all migrated to Once/Repeating
# variants
backward-compatibility-add-deprecated-base-Bind-APIs.patch

# Backward compatibility patch to temporarily add base::AdaptCallbackForRepeating
# TODO(b/204383858): Remove the patch when usage in mri_package is removed
backward-compatibility-add-base-AdaptCallbackForRepaeting.patch media_perception

# base::JSONReader::ValueWithError will be migrated to return
# base::expected<base::Value, Error> instead of ValueWithError in libchrome r1017954
# (crrev.com/c/3696611).
# This stub ValueWithError with functions commonly used by the new return type.
forward-compatibility-stub-base-JSONReader-ValueWithError.patch
