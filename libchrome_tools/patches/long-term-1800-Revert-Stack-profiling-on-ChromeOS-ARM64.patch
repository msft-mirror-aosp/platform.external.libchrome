From 312d54adc1d2d86eca3434f38f97577998e02060 Mon Sep 17 00:00:00 2001
From: Nathan Muggli <nmuggli@google.com>
Date: Thu, 21 Dec 2023 11:22:00 -0700
Subject: [PATCH] Revert "Stack profiling on ChromeOS ARM64"

This change is realted to and was causing conflicts with
long-term-1900-Revert-Reland-Initial-implementation-of-ChromeOS-X86-stack-walker.patch

Created this revert since it's related to the original 1900 patch.

This reverts commit 96fc34d2010d6ef50e65ee3da5da312a99197174.
---
 base/profiler/frame_pointer_unwinder.h            | 2 +-
 base/profiler/stack_sampler_posix.cc              | 9 +++------
 base/profiler/stack_sampling_profiler.cc          | 5 ++---
 base/profiler/stack_sampling_profiler_unittest.cc | 3 +--
 4 files changed, 7 insertions(+), 12 deletions(-)

diff --git a/base/profiler/frame_pointer_unwinder.h b/base/profiler/frame_pointer_unwinder.h
index d0aa9a0aa4..19d55793e1 100644
--- a/base/profiler/frame_pointer_unwinder.h
+++ b/base/profiler/frame_pointer_unwinder.h
@@ -20,7 +20,7 @@ namespace base {
 // Native unwinder implementation for platforms that have frame pointers:
 //  * iOS, ARM64 and X86_64,
 //  * macOS
-//  * ChromeOS X86_64 and ARM64
+//  * ChromeOS X86_64
 class BASE_EXPORT
 #if BUILDFLAG(IS_APPLE)
 API_AVAILABLE(ios(12))
diff --git a/base/profiler/stack_sampler_posix.cc b/base/profiler/stack_sampler_posix.cc
index a29bc57d85..2df66efa3b 100644
--- a/base/profiler/stack_sampler_posix.cc
+++ b/base/profiler/stack_sampler_posix.cc
@@ -12,8 +12,7 @@
 #include "base/threading/platform_thread.h"
 #include "build/build_config.h"
 
-#if BUILDFLAG(IS_CHROMEOS) && \
-    (defined(ARCH_CPU_X86_64) || defined(ARCH_CPU_ARM64))
+#if BUILDFLAG(IS_CHROMEOS) && defined(ARCH_CPU_X86_64)
 #include "base/check.h"
 #include "base/functional/bind.h"
 #include "base/profiler/frame_pointer_unwinder.h"
@@ -26,8 +25,7 @@ namespace base {
 
 namespace {
 
-#if BUILDFLAG(IS_CHROMEOS) && \
-    (defined(ARCH_CPU_X86_64) || defined(ARCH_CPU_ARM64))
+#if BUILDFLAG(IS_CHROMEOS) && defined(ARCH_CPU_X86_64)
 std::vector<std::unique_ptr<Unwinder>> CreateUnwinders() {
   std::vector<std::unique_ptr<Unwinder>> unwinders;
   unwinders.push_back(std::make_unique<FramePointerUnwinder>());
@@ -43,8 +41,7 @@ std::unique_ptr<StackSampler> StackSampler::Create(
     UnwindersFactory core_unwinders_factory,
     RepeatingClosure record_sample_callback,
     StackSamplerTestDelegate* test_delegate) {
-#if BUILDFLAG(IS_CHROMEOS) && \
-    (defined(ARCH_CPU_X86_64) || defined(ARCH_CPU_ARM64))
+#if BUILDFLAG(IS_CHROMEOS) && defined(ARCH_CPU_X86_64)
   DCHECK(!core_unwinders_factory);
   return base::WrapUnique(
       new StackSampler(std::make_unique<StackCopierSignal>(
diff --git a/base/profiler/stack_sampling_profiler.cc b/base/profiler/stack_sampling_profiler.cc
index 7697ef6d30..348b102128 100644
--- a/base/profiler/stack_sampling_profiler.cc
+++ b/base/profiler/stack_sampling_profiler.cc
@@ -802,7 +802,7 @@ TimeTicks StackSamplingProfiler::TestPeer::GetNextSampleTime(
 
 // static
 // The profiler is currently supported for Windows x64, macOS, iOS 64-bit,
-// Android ARM32 and ARM64, and ChromeOS x64 and ARM64.
+// Android ARM32 and ARM64, and ChromeOS x64.
 bool StackSamplingProfiler::IsSupportedForCurrentPlatform() {
 #if (BUILDFLAG(IS_WIN) && defined(ARCH_CPU_X86_64)) || BUILDFLAG(IS_MAC) || \
     (BUILDFLAG(IS_IOS) && defined(ARCH_CPU_64_BITS)) ||                     \
@@ -810,8 +810,7 @@ bool StackSamplingProfiler::IsSupportedForCurrentPlatform() {
      ((defined(ARCH_CPU_ARMEL) && BUILDFLAG(ENABLE_ARM_CFI_TABLE)) ||       \
       (defined(ARCH_CPU_ARM64) &&                                           \
        BUILDFLAG(CAN_UNWIND_WITH_FRAME_POINTERS)))) ||                      \
-    (BUILDFLAG(IS_CHROMEOS) &&                                              \
-     (defined(ARCH_CPU_X86_64) || defined(ARCH_CPU_ARM64)))
+    (BUILDFLAG(IS_CHROMEOS) && defined(ARCH_CPU_X86_64))
 #if BUILDFLAG(IS_WIN)
   // Do not start the profiler when Application Verifier is in use; running them
   // simultaneously can cause crashes and has no known use case.
diff --git a/base/profiler/stack_sampling_profiler_unittest.cc b/base/profiler/stack_sampling_profiler_unittest.cc
index 9dc86b2aa9..10556682a6 100644
--- a/base/profiler/stack_sampling_profiler_unittest.cc
+++ b/base/profiler/stack_sampling_profiler_unittest.cc
@@ -54,8 +54,7 @@
     (BUILDFLAG(IS_MAC) && defined(ARCH_CPU_X86_64)) ||            \
     (BUILDFLAG(IS_IOS) && defined(ARCH_CPU_64_BITS)) ||           \
     (BUILDFLAG(IS_ANDROID) && BUILDFLAG(ENABLE_ARM_CFI_TABLE)) || \
-    (BUILDFLAG(IS_CHROMEOS) &&                                    \
-     (defined(ARCH_CPU_X86_64) || defined(ARCH_CPU_ARM64)) &&     \
+    (BUILDFLAG(IS_CHROMEOS) && defined(ARCH_CPU_X86_64) &&        \
      !defined(MEMORY_SANITIZER))
 #define STACK_SAMPLING_PROFILER_SUPPORTED 1
 #endif
-- 
2.43.0.472.g3155946c3a-goog

