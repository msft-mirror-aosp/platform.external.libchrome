From 4ab243887f96782b28a78208b33ec22c5cb35cf4 Mon Sep 17 00:00:00 2001
From: Cici Ruan <cuicuiruan@google.com>
Date: Thu, 19 Dec 2024 15:11:55 -0800
Subject: [PATCH] Revert "Remove make_span."

This reverts commit 2146e0b7c539469002f22820ff0f519d92f2b684.

Change-Id: I33b09de8bdf1152cb0e2c3d5481a4bc35ed94aa8
---
 base/containers/span.h | 26 ++++++++++++++++++++++++++
 1 file changed, 26 insertions(+)

diff --git a/base/containers/span.h b/base/containers/span.h
index d2fdc81dd3..7132251854 100644
--- a/base/containers/span.h
+++ b/base/containers/span.h
@@ -1719,6 +1719,32 @@ constexpr auto as_writable_byte_span(
   return as_writable_bytes(allow_nonunique_obj, span<ElementType, Extent>(arr));
 }
 
+// Type-deducing helper to construct a span.
+// Deprecated: Use CTAD (i.e. use `span()` directly without template arguments).
+// TODO(crbug.com/341907909): Remove.
+template <int&... ExplicitArgumentBarrier, typename It, typename EndOrSize>
+  requires(std::contiguous_iterator<It>)
+// SAFETY: `it` must point to the first of a (possibly-empty) series of
+// contiguous valid elements. If `end_or_size` is a size, the series must
+// contain at least that many valid elements; if it is an iterator or sentinel,
+// it must refer to the same allocation, and all elements in the range [it,
+// end_or_size) must be valid. Otherwise, the span will allow access to invalid
+// elements, resulting in UB.
+UNSAFE_BUFFER_USAGE constexpr auto make_span(It it, EndOrSize end_or_size) {
+  return UNSAFE_BUFFERS(span(it, end_or_size));
+}
+template <int&... ExplicitArgumentBarrier, typename R>
+  requires(internal::SpanConstructibleFrom<R &&>)
+constexpr auto make_span(R&& r LIFETIME_BOUND) {
+  return span(std::forward<R>(r));
+}
+template <int&... ExplicitArgumentBarrier, typename R>
+  requires(internal::SpanConstructibleFrom<R &&> &&
+           std::ranges::borrowed_range<R>)
+constexpr auto make_span(R&& r) {
+  return span(std::forward<R>(r));
+}
+
 }  // namespace base
 
 #endif  // BASE_CONTAINERS_SPAN_H_
-- 
2.47.1.613.gc27f4b7a9f-goog

